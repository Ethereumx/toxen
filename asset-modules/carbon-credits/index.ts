// asset-modules/carbon-credits/index.ts

import { AssetModule, ValidationResult, ValidationError, ContractTemplate } from '../interfaces';
import { CarbonCreditData } from "./types";

const CARBON_CREDIT_BYTECODE = "608060405234801561000f575f5ffd5b50604051610fca380380610fca8339818101604052810190610031919061030c565b825f908161003f919061059b565b50816001819055508060029081610056919061059b565b503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060015460035f60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60015460405161017c9190610679565b60405180910390a3505050610692565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101eb826101a5565b810181811067ffffffffffffffff8211171561020a576102096101b5565b5b80604052505050565b5f61021c61018c565b905061022882826101e2565b919050565b5f67ffffffffffffffff821115610247576102466101b5565b5b610250826101a5565b9050602081019050919050565b8281835e5f83830152505050565b5f61027d6102788461022d565b610213565b905082815260208101848484011115610299576102986101a1565b5b6102a484828561025d565b509392505050565b5f82601f8301126102c0576102bf61019d565b5b81516102d084826020860161026b565b91505092915050565b5f819050919050565b6102eb816102d9565b81146102f5575f5ffd5b50565b5f81519050610306816102e2565b92915050565b5f5f5f6060848603121561032357610322610195565b5b5f84015167ffffffffffffffff8111156103405761033f610199565b5b61034c868287016102ac565b935050602061035d868287016102f8565b925050604084015167ffffffffffffffff81111561037e5761037d610199565b5b61038a868287016102ac565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103e257607f821691505b6020821081036103f5576103f461039e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261041c565b610461868361041c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61049c610497610492846102d9565b610479565b6102d9565b9050919050565b5f819050919050565b6104b583610482565b6104c96104c1826104a3565b848454610428565b825550505050565b5f5f905090565b6104e06104d1565b6104eb8184846104ac565b505050565b5b8181101561050e576105035f826104d8565b6001810190506104f1565b5050565b601f82111561055357610524816103fb565b61052d8461040d565b8101602085101561053c578190505b6105506105488561040d565b8301826104f0565b50505b505050565b5f82821c905092915050565b5f6105735f1984600802610558565b1980831691505092915050565b5f61058b8383610564565b9150826002028217905092915050565b6105a482610394565b67ffffffffffffffff8111156105bd576105bc6101b5565b5b6105c782546103cb565b6105d2828285610512565b5f60209050601f831160018114610603575f84156105f1578287015190505b6105fb8582610580565b865550610662565b601f198416610611866103fb565b5f5b8281101561063857848901518255600182019150602085019450602081019050610613565b868310156106555784890151610651601f891682610564565b8355505b6001600288020188555050505b505050505050565b610673816102d9565b82525050565b5f60208201905061068c5f83018461066a565b92915050565b61092b8061069f5f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80632a0daeea116100595780632a0daeea146100eb57806370a08231146101095780638da5cb5b14610139578063a9059cbb146101575761007b565b806306fdde031461007f57806318160ddd1461009d57806327e235e3146100bb575b5f5ffd5b610087610187565b6040516100949190610598565b60405180910390f35b6100a5610212565b6040516100b291906105d0565b60405180910390f35b6100d560048036038101906100d09190610647565b610218565b6040516100e291906105d0565b60405180910390f35b6100f361022d565b6040516101009190610598565b60405180910390f35b610123600480360381019061011e9190610647565b6102b9565b60405161013091906105d0565b60405180910390f35b6101416102ff565b60405161014e9190610681565b60405180910390f35b610171600480360381019061016c91906106c4565b610324565b60405161017e919061071c565b60405180910390f35b5f805461019390610762565b80601f01602080910402602001604051908101604052809291908181526020018280546101bf90610762565b801561020a5780601f106101e15761010080835404028352916020019161020a565b820191905f5260205f20905b8154815290600101906020018083116101ed57829003601f168201915b505050505081565b60015481565b6003602052805f5260405f205f915090505481565b6002805461023a90610762565b80601f016020809104026020016040519081016040528092919081815260200182805461026690610762565b80156102b15780601f10610288576101008083540402835291602001916102b1565b820191905f5260205f20905b81548152906001019060200180831161029457829003601f168201915b505050505081565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610393576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038a906107dc565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040a90610844565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461045f919061088f565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104b291906108c2565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161051691906105d0565b60405180910390a36001905092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61056a82610528565b6105748185610532565b9350610584818560208601610542565b61058d81610550565b840191505092915050565b5f6020820190508181035f8301526105b08184610560565b905092915050565b5f819050919050565b6105ca816105b8565b82525050565b5f6020820190506105e35f8301846105c1565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610616826105ed565b9050919050565b6106268161060c565b8114610630575f5ffd5b50565b5f813590506106418161061d565b92915050565b5f6020828403121561065c5761065b6105e9565b5b5f61066984828501610633565b91505092915050565b61067b8161060c565b82525050565b5f6020820190506106945f830184610672565b92915050565b6106a3816105b8565b81146106ad575f5ffd5b50565b5f813590506106be8161069a565b92915050565b5f5f604083850312156106da576106d96105e9565b5b5f6106e785828601610633565b92505060206106f8858286016106b0565b9150509250929050565b5f8115159050919050565b61071681610702565b82525050565b5f60208201905061072f5f83018461070d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061077957607f821691505b60208210810361078c5761078b610735565b5b50919050565b7f5472616e7366657220746f207a65726f206164647265737300000000000000005f82015250565b5f6107c6601883610532565b91506107d182610792565b602082019050919050565b5f6020820190508181035f8301526107f3816107ba565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f61082e601483610532565b9150610839826107fa565b602082019050919050565b5f6020820190508181035f83015261085b81610822565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610899826105b8565b91506108a4836105b8565b92508282039050818111156108bc576108bb610862565b5b92915050565b5f6108cc826105b8565b91506108d7836105b8565b92508282019050808211156108ef576108ee610862565b5b9291505056fea264697066735822122062bcd6b0f6d6559fb4b1faeb02a2e0944176efe5e800ed37ad58949855652e1164736f6c634300081e0033";
const CARBON_CREDIT_ABI = [
    {
        "inputs": [
            {
                "internalType": "string",
                "name": "_name",
                "type": "string"
            },
            {
                "internalType": "uint256",
                "name": "_totalSupply",
                "type": "uint256"
            },
            {
                "internalType": "string",
                "name": "_serialNumber",
                "type": "string"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
            }
        ],
        "name": "Transfer",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "account",
                "type": "address"
            }
        ],
        "name": "balanceOf",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "name": "balances",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "name",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "serialNumber",
        "outputs": [
            {
                "internalType": "string",
                "name": "",
                "type": "string"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "to",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
            }
        ],
        "name": "transfer",
        "outputs": [
            {
                "internalType": "bool",
                "name": "",
                "type": "bool"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    }
];

export class CarbonCreditsModule implements AssetModule {

  readonly supportedChains: string[] = [
    'ethereum',
    'polygon',
    'arbitrum'
  ];

  validate(data: CarbonCreditData): ValidationResult {
    const errors: ValidationError[] = [];

    if (!data.projectName?.trim()) {
      errors.push({ field: 'projectName', message: 'Project name is required' });
    }

    if (!data.quantity || data.quantity <= 0) {
      errors.push({ field: 'quantity', message: 'Quantity must be a positive number' });
    }

    if (!data.serialNumber?.trim()) {
      errors.push({ field: 'serialNumber', message: 'Serial number is required' });
    }

    return {
      isValid: errors.length === 0,
      errors
    };
  }

  generateContract(data: CarbonCreditData): ContractTemplate {
    const validation = this.validate(data);
    if (!validation.isValid) {
      throw new Error(`Validation failed: ${validation.errors.map(e => e.message).join(', ')}`);
    }

    return {
      bytecode: CARBON_CREDIT_BYTECODE,
      abi: CARBON_CREDIT_ABI,
      constructorArgs: [
        data.projectName,
        data.quantity,
        data.serialNumber
      ]
    };
  }
}

// Export singleton
export const carbonCreditsModule = new CarbonCreditsModule();

// Export types
export { CarbonCreditData } from './types';